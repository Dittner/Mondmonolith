version: '3'

services:
  frontend:
    container_name: frontend
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - network

  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    restart: always
    command: ["postgres", "-c", "log_statement=all"]
    environment:
      - POSTGRES_USER=postgres
      - PGUSER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - PGDATABASE=postgres
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - network

  api:
    container_name: api
    restart: always
    build:
      context: ./api
      dockerfile: Dockerfile
    depends_on:
      - postgres
    links:
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
    networks:
      - network

  nginx:
    container_name: nginx
    restart: always
    image: nginx:1.13
    depends_on:
      - api
    ports:
      - 443:443
    volumes:
      - ./nginx/conf.prod:/etc/nginx/conf.d/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - web-root:/var/www/html
    networks:
      - network

volumes:
  web-root:

networks:
  network:
    driver: bridge